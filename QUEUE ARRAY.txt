3. Queue Using Array

#include<stdio.h>
#include<stdlib.h>
# define max_size 5
int queue[max_size],front=-1,rear=-1;
void enqueue();
void dequeue();
void isempty();
void isfull();
void display();
int main()
{
  int choice;
  do
  {
    printf("1.Enqueue\n");
    printf("2.Dequeue\n");
    printf("3.IsEmpty\n");
    printf("4.IsFull\n");
    printf("5.Display\n");
    printf("6.Exit\n");
    printf("Enter your choice\n");
    scanf("%d",&choice);
    switch(choice)
    {
      case 1: enqueue();
      break;
      case 2: dequeue();
      break;
      case 3: isempty();
      break;
      case 4: isfull();
      break;
      case 5: display();
      break;
      case 6: exit(0);
      break;
      default: printf("Invalid Choice!");
      break;
    }
  }
  while(choice!=6);
  return 0;
}
void enqueue()
{
  int item;
  if(rear==max_size-1)
  {
    printf("Queue is Overflow\n");
  }
  else 
  printf("Enter the element to be inserted\n");
  scanf("%d",&item);
  if(rear==-1)
  {
    front=0;
    rear=0;

  }
  else
  rear=rear+1;
  queue[rear]=item;
}
void dequeue()
{
  int item;
  if(front==-1)
  {
    printf("Queue is Overflow\n");
  }
  else
  {
    item=queue[front];
    if(front==rear)
    {
      front=-1;
      rear=-1;
    }
    else
    printf("The deleted element is %d\n",item);
    front=front+1;
  }
}
  
void isempty()
{
  if(front==-1)
  {
    printf("Queue is empty\n");
  }
  else
  printf("Queue is not empty\n");
}
void isfull()
{
  if(rear==max_size-1)
  {
    printf("Queue is full\n");
  }
  else
  printf("Queue is not full\n");
}
void display()
{
  if(front==-1)
  {
    printf("Queue is Underflow\n");
  }
  else
  printf("The Queue elements are\n");
  for(int i=front;i<=rear;i++)
  printf("%d\n",queue[i]);
}